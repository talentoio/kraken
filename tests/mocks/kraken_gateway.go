// Code generated by MockGen. DO NOT EDIT.
// Source: kraken.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	dto "kraken/internal/gateway/dto"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockKrakenGateway is a mock of KrakenGateway interface.
type MockKrakenGateway struct {
	ctrl     *gomock.Controller
	recorder *MockKrakenGatewayMockRecorder
}

// MockKrakenGatewayMockRecorder is the mock recorder for MockKrakenGateway.
type MockKrakenGatewayMockRecorder struct {
	mock *MockKrakenGateway
}

// NewMockKrakenGateway creates a new mock instance.
func NewMockKrakenGateway(ctrl *gomock.Controller) *MockKrakenGateway {
	mock := &MockKrakenGateway{ctrl: ctrl}
	mock.recorder = &MockKrakenGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKrakenGateway) EXPECT() *MockKrakenGatewayMockRecorder {
	return m.recorder
}

// LTP mocks base method.
func (m *MockKrakenGateway) LTP(ctx context.Context, pair string) (*dto.KrakenLTPResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LTP", ctx, pair)
	ret0, _ := ret[0].(*dto.KrakenLTPResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LTP indicates an expected call of LTP.
func (mr *MockKrakenGatewayMockRecorder) LTP(ctx, pair interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LTP", reflect.TypeOf((*MockKrakenGateway)(nil).LTP), ctx, pair)
}
