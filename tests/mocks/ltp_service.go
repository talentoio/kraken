// Code generated by MockGen. DO NOT EDIT.
// Source: ltp.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	domain "kraken/internal/services/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLTPService is a mock of LTPService interface.
type MockLTPService struct {
	ctrl     *gomock.Controller
	recorder *MockLTPServiceMockRecorder
}

// MockLTPServiceMockRecorder is the mock recorder for MockLTPService.
type MockLTPServiceMockRecorder struct {
	mock *MockLTPService
}

// NewMockLTPService creates a new mock instance.
func NewMockLTPService(ctrl *gomock.Controller) *MockLTPService {
	mock := &MockLTPService{ctrl: ctrl}
	mock.recorder = &MockLTPServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLTPService) EXPECT() *MockLTPServiceMockRecorder {
	return m.recorder
}

// LTP mocks base method.
func (m *MockLTPService) LTP(ctx context.Context) ([]*domain.LTPPair, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LTP", ctx)
	ret0, _ := ret[0].([]*domain.LTPPair)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LTP indicates an expected call of LTP.
func (mr *MockLTPServiceMockRecorder) LTP(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LTP", reflect.TypeOf((*MockLTPService)(nil).LTP), ctx)
}
